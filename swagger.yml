openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8080
paths:
  /{eventId}:
    get:
      parameters:
        - name: eventId
          in: path
          description: ID of event
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  /{eventId}/tracks:
    get:
      parameters:
        - name: eventId
          in: path
          description: ID of event
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
  
  /{eventId}/tracks/{trackId}:
    get:
      parameters:
        - name: eventId
          in: path
          description: ID of event
          required: true
          schema:
            type: string
        - name: trackId
          in: path
          description: ID of track
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
  /{eventId}/talks:
    get:
      parameters:
        - name: eventId
          in: path
          description: ID of event
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Talk'
  /{eventId}/talks/{talkId}:
    get:
      parameters:
        - name: eventId
          in: path
          description: ID of event
          required: true
          schema:
            type: string
        - name: talkId
          in: path
          description: ID of talk
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talk'

components:
  schemas:
    Event:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        name:
          type: string
        abbr:
          type: string
        status:
          type: string
        theme:
          type: string
        about:
          type: string
        privacy_policy:
          type: string
        privacy_policy_for_speaker:
          type: string
        copyright:
          type: string
        coc:
          type: string
      required:
        - id
        - name
        - abbr
        - status
        - theme
        - about
        - privacy_policy
        - privacy_policy_for_speaker
        - copyright
        - coc
    Track:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        name:
          type: string
        abbr:
          type: string
        status:
          type: string
        theme:
          type: string
        about:
          type: string
        privacy_policy:
          type: string
        privacy_policy_for_speaker:
          type: string
        copyright:
          type: string
        coc:
          type: string
      required:
        - id
        - name
        - abbr
        - status
        - theme
        - about
        - privacy_policy
        - privacy_policy_for_speaker
        - copyright
        - coc
    Talk:
      type: object
      additionalProperties: false
      properties:
        id:
          type: number
        name:
          type: string
        abbr:
          type: string
        status:
          type: string
        theme:
          type: string
        about:
          type: string
        privacy_policy:
          type: string
        privacy_policy_for_speaker:
          type: string
        copyright:
          type: string
        coc:
          type: string
      required:
        - id
        - name
        - abbr
        - status
        - theme
        - about
        - privacy_policy
        - privacy_policy_for_speaker
        - copyright
        - coc
